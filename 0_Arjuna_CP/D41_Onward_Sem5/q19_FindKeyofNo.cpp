



/*

28th Oct 2025 (Tuesday - Chhath Puja)

qno 3270  https://leetcode.com/problems/find-the-key-of-the-numbers/description/


3270. Find the Key of the Numbers
Easy
Topics

Companies
You are given three positive integers num1, num2, and num3.

The key of num1, num2, and num3 is defined as a four-digit number such that:

Initially, if any number has less than four digits, it is padded with leading zeros.
The ith digit (1 <= i <= 4) of the key is generated by taking the smallest digit among the ith digits of num1, num2, and num3.
Return the key of the three numbers without leading zeros (if any).

 

Example 1:

Input: num1 = 1, num2 = 10, num3 = 1000

Output: 0

Explanation:

On padding, num1 becomes "0001", num2 becomes "0010", and num3 remains "1000".

The 1st digit of the key is min(0, 0, 1).
The 2nd digit of the key is min(0, 0, 0).
The 3rd digit of the key is min(0, 1, 0).
The 4th digit of the key is min(1, 0, 0).
Hence, the key is "0000", i.e. 0.

Example 2:

Input: num1 = 987, num2 = 879, num3 = 798

Output: 777

Example 3:

Input: num1 = 1, num2 = 2, num3 = 3

Output: 1

 

Constraints:

1 <= num1, num2, num3 <= 9999




*/




class Solution {
public:
    int generateKey(int num1, int num2, int num3) { //TC=O(1)=SC


        // Convert the numbers to 4-digit strings by padding with leading zeros
        string str1 = to_string(num1);
        string str2 = to_string(num2);
        string str3 = to_string(num3);


        
        // Pad with leading zeros if necessary
        str1 = string(4 - str1.size(), '0') + str1;
        str2 = string(4 - str2.size(), '0') + str2;
        str3 = string(4 - str3.size(), '0') + str3;
        
        // Initialize 
        string result = "";
        
        // Loop through each of the 4 positions
        for (int i = 0; i < 4; ++i) {
            // Get the smallest digit at the current position
            char minDigit = min({str1[i], str2[i], str3[i]});
            result += minDigit;
        }
        
        // Convert the result string to an integer to remove any leading zeros
        return stoi(result);
    }
};
